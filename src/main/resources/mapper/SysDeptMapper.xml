<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.icode.dao.SysDeptMapper" >
  <resultMap id="BaseResultMap" type="com.icode.model.SysDept" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="parent_id" property="parentId" jdbcType="INTEGER" />
    <result column="level" property="level" jdbcType="VARCHAR" />
    <result column="seq" property="seq" jdbcType="INTEGER" />
    <result column="remark" property="remark" jdbcType="VARCHAR" />
    <result column="operator" property="operator" jdbcType="VARCHAR" />
    <result column="operate_time" property="operateTime" jdbcType="TIMESTAMP" />
    <result column="operate_ip" property="operateIp" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, name, parent_id, level, seq, remark, operator, operate_time, operate_ip
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from sys_dept
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from sys_dept
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.icode.model.SysDept" >
    insert into sys_dept (id, name, parent_id, 
      level, seq, remark, 
      operator, operate_time, operate_ip
      )
    values (#{record.id,jdbcType=INTEGER}, #{record.name,jdbcType=VARCHAR}, #{record.parentId,jdbcType=INTEGER},
      #{record.level,jdbcType=VARCHAR}, #{record.seq,jdbcType=INTEGER}, #{record.remark,jdbcType=VARCHAR},
      #{record.operator,jdbcType=VARCHAR}, #{record.operateTime,jdbcType=TIMESTAMP}, #{record.operateIp,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.icode.model.SysDept" >
    insert into sys_dept
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="parentId != null" >
        parent_id,
      </if>
      <if test="level != null" >
        level,
      </if>
      <if test="seq != null" >
        seq,
      </if>
      <if test="remark != null" >
        remark,
      </if>
      <if test="operator != null" >
        operator,
      </if>
      <if test="operateTime != null" >
        operate_time,
      </if>
      <if test="operateIp != null" >
        operate_ip,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{record.id,jdbcType=INTEGER},
      </if>
      <if test="name != null" >
        #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="parentId != null" >
        #{record.parentId,jdbcType=INTEGER},
      </if>
      <if test="level != null" >
        #{record.level,jdbcType=VARCHAR},
      </if>
      <if test="seq != null" >
        #{record.seq,jdbcType=INTEGER},
      </if>
      <if test="remark != null" >
        #{record.remark,jdbcType=VARCHAR},
      </if>
      <if test="operator != null" >
        #{record.operator,jdbcType=VARCHAR},
      </if>
      <if test="operateTime != null" >
        #{record.operateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="operateIp != null" >
        #{record.operateIp,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.icode.model.SysDept" >
    update sys_dept
    <set >
      <if test="name != null" >
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="parentId != null" >
        parent_id = #{record.parentId,jdbcType=INTEGER},
      </if>
      <if test="level != null" >
        level = #{record.level,jdbcType=VARCHAR},
      </if>
      <if test="seq != null" >
        seq = #{record.seq,jdbcType=INTEGER},
      </if>
      <if test="remark != null" >
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
      <if test="operator != null" >
        operator = #{record.operator,jdbcType=VARCHAR},
      </if>
      <if test="operateTime != null" >
        operate_time = #{record.operateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="operateIp != null" >
        operate_ip = #{record.operateIp,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{record.id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.icode.model.SysDept" >
    update sys_dept
    set name = #{record.name,jdbcType=VARCHAR},
      parent_id = #{record.parentId,jdbcType=INTEGER},
      level = #{record.level,jdbcType=VARCHAR},
      seq = #{record.seq,jdbcType=INTEGER},
      remark = #{record.remark,jdbcType=VARCHAR},
      operator = #{record.operator,jdbcType=VARCHAR},
      operate_time = #{record.operateTime,jdbcType=TIMESTAMP},
      operate_ip = #{record.operateIp,jdbcType=VARCHAR}
    where id = #{record.id,jdbcType=INTEGER}
  </update>

  <select id="getAllDept" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from sys_dept
  </select>

  <select id="getChildDeptListByLevel" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from sys_dept
    WHERE level like concat(#{level}, ".%")
  </select>
  
  <update id="batchUpdateLevel" parameterType="map">
    <foreach collection="sysDeptList" item="sysDept" separator=";">
      UPDATE sys_dept
      SET level = #{sysDept.level}
      WHERE id = #{sysDept.id}
    </foreach>
  </update>

  <select id="countByNameAndParentId" parameterType="map" resultType="int">
    SELECT COUNT(1)
    FROM sys_dept
    WHERE name = #{name}
    <if test="parentId != null">
      AND parent_id = #{parentId}
    </if>
    <if test="id != null">
      AND id != #{id}
    </if>
  </select>
</mapper>